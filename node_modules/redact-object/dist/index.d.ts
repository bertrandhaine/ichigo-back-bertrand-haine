export declare type ReplaceFunction = (value: any, key: string) => string;
export interface ConfigOptions {
    partial?: boolean;
    strict?: boolean;
    ignoreUnknown?: boolean;
}
/**
 * Parses an object and redacts any keys listed in keywords
 *
 * @param  {object}            target     The target object to scan for redactable items
 * @param  {string[]}          keywords   A list of members to redact
 * @param  {string|function}   replaceVal Optional custom replace value or function replacer
 * @param  {object}            config     Optional config
 *                                        {
 *                                          partial: boolean, do partial matches, default false
 *                                          strict: boolean, do strict key matching, default true
 *                                          ignoreUnknown: boolean, ignore unknown types instead of error, default false
 *                                        }
 * @return {object}                       the new redacted object
 */
export default function redact(target: unknown, keywords: string[], replaceVal?: string | ReplaceFunction, config?: ConfigOptions): any;
